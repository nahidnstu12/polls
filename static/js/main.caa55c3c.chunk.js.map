{"version":3,"sources":["Sidebar/PollList.js","Sidebar/AddPollModal.js","Sidebar/sidebarComponent.js","MainComponent/pollComponent.js","MainComponent/OpinionList.js","MainComponent/mainComponent.js","data.js","App.js","serviceWorker.js","index.js"],"names":["PollList","polls","selectPoll","ListGroup","map","poll","ListGroupItem","key","id","style","cursor","fontWeight","title","onClick","className","length","substr","defaultOptions","shortid","generate","value","vote","resetOptions","PollModal","modal","toggle","submit","btnValue","header","isUpdate","useState","basetitle","setTitle","description","setDescript","options","setOptions","errors","setErrors","useEffect","Object","keys","state","Modal","isOpen","unmountOnClose","ModalHeader","ModalBody","Form","onSubmit","e","preventDefault","optionError","forEach","opt","index","isValid","validate","alert","target","reset","FormGroup","Input","type","placeholder","onChange","name","invalid","FormFeedback","Button","color","option","push","ind","event","handleOptionChange","disabled","splice","deleteOption","Sidebar","handleSearch","setModal","inline","toLowerCase","Poll","getOpinion","deletePoll","setName","selectedOption","setOption","selectOption","Row","Col","md","window","confirm","pollId","CustomInput","label","Badge","fontSize","totalVote","Math","ceil","Label","OpinionList","opinion","setOpinion","filterdData","opinions","filter","handleOpinion","MainContent","Polls","created","Date","App","setPolls","selectedPoll","setSelectedPoll","searchTerm","setSearchTerm","useCallback","find","p","allPolls","includes","Container","val","concat","res","updatePoll","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.caa55c3c.chunk.js","sourcesContent":["import React from 'react'\r\nimport {ListGroup,ListGroupItem}  from 'reactstrap';\r\n\r\nfunction PollList({polls,selectPoll}) {\r\n    return (\r\n       <ListGroup>\r\n           {polls.map(poll => (\r\n               <ListGroupItem key={poll.id} style={{ cursor: \"pointer\",fontWeight:\"600\"}} title={poll.title} onClick={()=> selectPoll(poll.id)} className=\"text-primary\" >\r\n                {poll.title.length > 35 ? poll.title.substr(0,35)+\"...\" : poll.title}\r\n               </ListGroupItem>\r\n           ))}\r\n       </ListGroup>\r\n    )\r\n} \r\nexport default PollList\r\n","import React, { useState, useEffect } from 'react';\r\nimport shortid from 'shortid';\r\nimport { Button, Modal, ModalHeader, ModalBody,Form,FormGroup,Input,FormFeedback } from 'reactstrap';\r\n\r\n\r\nconst defaultOptions = [\r\n    { id: shortid.generate(), value: '', vote: 0 },\r\n    { id: shortid.generate(), value: '', vote: 0 },\r\n];\r\nconst resetOptions = [\r\n    { id: shortid.generate(), value: '', vote: 0 },\r\n    { id: shortid.generate(), value: '', vote: 0 },\r\n];\r\n\r\nfunction PollModal({ modal, toggle, submit, btnValue, header, poll, isUpdate }) {\r\n\r\n    const [basetitle, setTitle] = useState('');\r\n    const [description, setDescript] = useState('');\r\n    const [options, setOptions] = useState(defaultOptions);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (poll && Object.keys(poll).length > 0) {\r\n            setTitle(poll.title);\r\n            setDescript(poll.description);\r\n            setOptions(poll.options)\r\n        }\r\n    }, [poll])\r\n\r\n    const handleOptionChange = (event, index) => {\r\n        const option = [...options];\r\n        option[index].value = event.target.value;\r\n        setOptions(option);\r\n    }\r\n\r\n    const createOptions = () => {\r\n        const option = [...options];\r\n        if (option.length < 5) {\r\n            option.push({\r\n                id: shortid.generate(),\r\n                value: '',\r\n                vote: 0\r\n            })\r\n            setOptions(option);\r\n        }\r\n        else {\r\n            alert(\"You can create max 5 options\");\r\n        }\r\n    }\r\n    const deleteOption = index => {\r\n        const option = [...options];\r\n        if (option.length > 2) {\r\n            option.splice(index, 1);\r\n            setOptions(option);\r\n        } else {\r\n            alert('You must atleast two options');\r\n        }\r\n    }\r\n\r\n    const validate = () => {\r\n        const errors = {}\r\n        if (!basetitle) {\r\n            errors.title = 'Please Provide A Poll Title';\r\n        } else if (basetitle.length < 5) {\r\n            errors.title = 'Title too short';\r\n        } else if (basetitle.length > 100) {\r\n            errors.title = 'Title too long'\r\n        }\r\n\r\n        if (!description) {\r\n            errors.description = 'Please Provide A Poll description';\r\n\r\n        } else if (description.length > 500) {\r\n            errors.description = 'Description too long'\r\n        }\r\n        const optionError = []\r\n        options.forEach((opt, index) => {\r\n            if (!opt.value) {\r\n                optionError[index] = \"Option Empty\";\r\n            } else if (opt.value.length > 20) {\r\n                optionError[index] = 'Option Text too long';\r\n            }\r\n        })\r\n        if (optionError.length > 0) {\r\n            errors.options = optionError\r\n        }\r\n        return {\r\n            errors,\r\n            isValid: Object.keys(errors).length === 0\r\n        }\r\n\r\n    }\r\n    const state = {\r\n        title: basetitle,\r\n        description,\r\n        options\r\n    }\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const { isValid, errors } = validate();\r\n        if (isValid) {\r\n            if (isUpdate) {\r\n                state.id = poll.id;\r\n                submit(state);\r\n                alert(\"Update is Successfully\")\r\n            } else {\r\n                // rsetting form\r\n                submit(state);\r\n                alert(\"Submit Successfully\");\r\n                e.target.reset();\r\n                setTitle('');\r\n                setDescript('');\r\n                setOptions(resetOptions);\r\n                setErrors({});\r\n            }\r\n\r\n        } else {\r\n            setErrors(errors);\r\n        }\r\n\r\n\r\n    }\r\n    return (\r\n      \r\n        <div>\r\n            <Modal isOpen={modal} toggle={toggle} unmountOnClose={true}>\r\n                <ModalHeader toggle={toggle}>{header}</ModalHeader>\r\n                <ModalBody>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <FormGroup>\r\n                            <Input type=\"text\" placeholder=\"Give a poll title\" className=\"my-2\" value={basetitle} onChange={(e) => setTitle(e.target.value)} name=\"title\" invalid={errors.title ? true : false}\r\n                            />\r\n                            {errors.title && <FormFeedback>{errors.title}</FormFeedback>}\r\n\r\n                            <Input type=\"textarea\" placeholder=\"Give a poll description\" name=\"description\" onChange={(e) => setDescript(e.target.value)} value={description} invalid={errors.description ? true : false} />\r\n                            {errors.description && <FormFeedback>{errors.description}</FormFeedback>}\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <div> <span>Enter a option</span> <Button color=\"info\" className=\"ml-3\" onClick={createOptions}>Add New Options</Button> </div>\r\n                            {options.map((opt, ind) => (\r\n                                <div className=\"d-flex my-2\" key={opt.id}>\r\n                                    <Input value={opt.value} onChange={e => handleOptionChange(e, ind)} invalid={errors.options && errors.options[ind] ? true : false} />\r\n                                    <Button color=\"danger\" disabled={options.length <= 2} className=\"ml-2\" onClick={() => deleteOption(ind)}>Delete</Button>\r\n                                    {errors.options && <FormFeedback>{errors.options[ind]}</FormFeedback>}\r\n                                </div>\r\n                            ))}\r\n                        </FormGroup>\r\n                        <Button color=\"primary\">{btnValue}</Button>\r\n                    </Form>\r\n                </ModalBody>\r\n\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PollModal\r\n","import React,{useState} from 'react';\r\nimport { Form, FormGroup,Input,Button} from 'reactstrap';\r\nimport PollList from './PollList';\r\nimport PollModal from './AddPollModal';\r\n\r\nfunction Sidebar({polls,selectPoll,handleSearch,submit}) {\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    return (\r\n        <div>\r\n            <Form inline>\r\n                <FormGroup className=\"mr-2\">\r\n                    <Input type=\"search\" name=\"search\" placeholder=\"Search Polls\" \r\n                         onChange={e => handleSearch(e.target.value.toLowerCase())} \r\n                        />\r\n                </FormGroup>\r\n                <Button color=\"success\" onClick={toggle}>Add Poll</Button>\r\n                    <PollModal modal={modal} toggle={toggle} submit={submit} btnValue=\"Submit Poll\" header=\"Create A New Poll\"/>\r\n                \r\n            </Form>\r\n            <div className=\"mt-5\">\r\n                <h3>Lists of polls</h3>\r\n                <PollList polls={polls} selectPoll={selectPoll}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useState} from 'react'\r\nimport {Form,FormGroup,CustomInput,Row,Col, Button,Badge, Label,Input,FormFeedback} from 'reactstrap';\r\nimport PollModal from '../Sidebar/AddPollModal'\r\n\r\nfunction Poll({poll,getOpinion,deletePoll,submit}) {\r\n\r\n    const [name,setName] = useState('');\r\n    const [selectedOption,setOption] = useState('');\r\n    const [errors,setErrors] = useState({});\r\n    const [modal, setModal] = useState(false);\r\n    const toggle = () => setModal(!modal);\r\n    \r\n    const handleSubmit = e =>{\r\n        e.preventDefault();\r\n        const {errors,isValid} = validate();\r\n        if(isValid){\r\n            getOpinion ({\r\n                pollId:poll.id,\r\n                name,\r\n                selectedOption\r\n            })\r\n            // Resetting\r\n           e.target.reset();\r\n           setName('');\r\n           setOption('');\r\n           setErrors({})\r\n        }else{\r\n            setErrors(errors);\r\n        }\r\n    }\r\n    const validate = () =>{\r\n        const errors = {};\r\n        if(!selectedOption){\r\n            errors.selectOption = \"Please Select Option\";\r\n        }\r\n        if(!name){\r\n            errors.name = \"Please provide a name\";\r\n        }\r\n        else if(name.length < 3){\r\n            errors.title = 'Name too short';\r\n        }\r\n        return {\r\n            errors,\r\n            isValid:Object.keys(errors).length === 0\r\n        }\r\n    }\r\n    const handleDelete = () =>{\r\n        const confirm = window.confirm(\"Are You Sure to perform this action?\");\r\n        if(confirm){\r\n        deletePoll(poll.id)\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n        \r\n            <h3>{poll.title}</h3>\r\n            <p>{poll.description}</p>\r\n            <Row className=\"mb-5 mt-4\">\r\n                <Col md={6}>\r\n                    <h3>Options</h3>\r\n                </Col>\r\n                <Col>\r\n                    <Button color=\"warning\" className=\"mr-2\" onClick={toggle}>Edit</Button>\r\n                    <Button color=\"danger\" onClick={handleDelete}>Delete</Button>\r\n                </Col>\r\n            </Row>\r\n                <PollModal modal={modal} toggle={toggle} submit={submit} btnValue=\"Update Poll\" header=\"Update Poll Form\" poll={poll} isUpdate={true}/>            \r\n\r\n            <Form onSubmit = {handleSubmit}>\r\n            {poll.options.map((opt)=>(\r\n            <Row key={opt.id}>\r\n                <Col>\r\n                    <FormGroup>\r\n                    <CustomInput  type=\"radio\"  name=\"selectedOption\" id={opt.id} onChange={(e)=>setOption(e.target.value)} label={opt.value} value={opt.id} invalid={errors.selectOption ? true : false}/>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col>\r\n                    <Badge color=\"primary\" className=\"m-2 p-3\" style={{ fontSize: \"100%\" }}>{opt.vote}</Badge>\r\n                    <Badge color=\"danger\" className=\"p-3\" style={{ fontSize: \"100%\" }}>{poll.totalVote > 0 ? Math.ceil((100*opt.vote) / poll.totalVote): 0 }%</Badge>\r\n                </Col>\r\n                {errors.selectOption && <FormFeedback>{errors.selectOption}</FormFeedback>}\r\n            </Row>\r\n            ))}\r\n            \r\n            <FormGroup>\r\n                <Label>Enter Your Name</Label>\r\n                <Input type=\"text\" name=\"name\" placeholder=\"Your name\" onChange={(e)=>setName(e.target.value)} invalid={errors.name ? true : false}/>\r\n                {errors.name && <FormFeedback>{errors.name}</FormFeedback>}\r\n                <Button color=\"success\" className=\"my-2\">Submit Your Opinion</Button>\r\n            </FormGroup> \r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Poll\r\n","import React,{useState} from 'react'\r\nimport { Button, ListGroup,ListGroupItem } from 'reactstrap'\r\n\r\nfunction OpinionList({poll}) {\r\n    const [opinion,setOpinion] = useState([]);\r\n   \r\n    const handleOpinion = (id) =>{\r\n        const filterdData = poll.opinions.filter(opt => opt.selectedOption === id);\r\n        setOpinion(filterdData);\r\n    }\r\n    // need to improve live show \r\n    return (\r\n        <>\r\n        <h3 className=\"my-4 text-primary\">Names of Perticipants</h3>\r\n        <div className=\"d-flex\">\r\n            {poll.options.map(opt => (<Button color=\"info\" key={opt.id} className=\"mx-2\" onClick={()=>handleOpinion(opt.id)} >{opt.value}</Button>))}\r\n        </div>\r\n        <div>\r\n            {opinion.map(opt => <ListGroup key={opt.id} className=\"mt-2\">\r\n                <ListGroupItem className=\"text-center text-danger\">{opt.name}</ListGroupItem>\r\n            </ListGroup>)}\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OpinionList\r\n","import React from 'react';\r\nimport Poll from './pollComponent';\r\nimport OpinionList from './OpinionList';\r\n\r\nfunction MainContent({poll,getOpinion,deletePoll,submit}) {\r\n    return (\r\n        <>\r\n        {Object.keys(poll).length === 0 && <div>\r\n            <h3>Welcome to my <em>'Poll App'</em></h3>\r\n            <p>You can create as many poll as you want.Click the new button create new poll.To check details poll,pls click select from the left sidebar.By selecting a poll,you can check its details,perticipate and check other opinion about this poll</p>\r\n        </div> }\r\n\r\n        {Object.keys(poll).length !== 0 &&   <Poll poll={poll} getOpinion={getOpinion} deletePoll={deletePoll} submit={submit}/>}\r\n\r\n        {Object.keys(poll).length !== 0 && <OpinionList poll={poll} />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainContent\r\n","export const Polls = [\r\n    {\r\n    id:'45',\r\n    title:'What is your favourite programming language?',\r\n    description:'There are lot of programming languages.Among them what is your favourite',\r\n    options:[\r\n        {id: '7113',value:'Java',vote:0},\r\n        {id:'8213',value:'Javascript',vote:0},\r\n        {id:'9333',value:'python',vote:0}\r\n    ],\r\n    created: new Date(),\r\n    totalVote:0,\r\n    opinions:[]\r\n},\r\n{\r\n    id:'44',\r\n    title:'What is your favourite language?',\r\n    description:'There are lot of programming languages.Among them what is your favourite',\r\n    options:[\r\n        {id: '113',value:'Bangla',vote:0},\r\n        {id:'213',value:'English',vote:0},\r\n        {id:'333',value:'German',vote:0}\r\n    ],\r\n    created: new Date(),\r\n    totalVote:0,\r\n    opinions:[]\r\n},\r\n{\r\n    id:'47',\r\n    title:'What is your favourite Framework?',\r\n    description:'There are lot of programming languages.Among them what is your favourite framework',\r\n    options:[\r\n        {id: '413',value:'Spring',vote:0},\r\n        {id:'5213',value:'React',vote:0},\r\n        {id:'6333',value:'Django',vote:0}\r\n    ],\r\n    created: new Date(),\r\n    totalVote:0,\r\n    opinions:[]\r\n}\r\n]","import React,{useState,useEffect,useCallback} from 'react';\nimport {Container,Row,Col} from 'reactstrap';\nimport Sidebar from  './Sidebar/sidebarComponent';\nimport MainContent from './MainComponent/mainComponent';\nimport {Polls} from './data';\nimport shortid from 'shortid';\n\n\nfunction App() {\n\tconst [polls,setPolls] = useState([]);\n\tconst [selectedPoll,setSelectedPoll] = useState({});\n\tconst [searchTerm,setSearchTerm] = useState('');\n\n\tuseEffect(()=>{\n\t\tsetPolls(Polls);\n\t},[])\n\n\tconst selectPoll = useCallback( (pollId) =>{\n\t\tconst poll = polls.find(p => pollId === p.id);\n\t\tsetSelectedPoll(poll);\n\t},[polls]);\n\tconst handleSearch = val => {\n\t\tsetSearchTerm(val);\n\t}\n\tconst performSearch = () =>{\n\t\treturn polls.filter(poll => poll.title.toLowerCase().includes(searchTerm));\n\t}\n\tconst addNewPoll = poll => {\n\t\tpoll.id = shortid.generate();\n\t\tpoll.created = new Date();\n\t\tpoll.totalVote = 0;\n\t\tpoll.opinions = [];\n\t\tsetPolls(polls.concat(poll))\n\t}\n\n\tconst getOpinion = res => {\n\t\tconst poll = polls.find(p => p.id === res.pollId)\n\t\tconst option = poll.options.find(opt => opt.id === res.selectedOption);\n\t\tpoll.totalVote++;\n\t\toption.vote++;\n\t\tconst opinion = {\n\t\t\tid:shortid.generate(),\n\t\t\tname:res.name,\n\t\t\tselectedOption:res.selectedOption\n\t\t};\n\t\tpoll.opinions.push(opinion);\n\t\tsetPolls(polls);\n\n\t}\n\tconst updatePoll = updatePoll =>{\n\t\tconst poll = polls.find(p => p.id === updatePoll.id)\n\t\tpoll.title = updatePoll.title;\n\t\tpoll.description = updatePoll.description;\n\t\tpoll.options = updatePoll.options\n\t\tsetPolls(polls);\n\t}\n\tconst deletePoll = pollId => {\n\t\tconst poll = polls.filter(p => p.id !== pollId)\n\t\tsetPolls(poll);\n\t\tsetSelectedPoll({})\n\n\t}\n\tconst allPolls = performSearch();\n  return (\n\t  \n    <Container className=\"my-5\">\n      <Row>\n        <Col md={4}>\n          <Sidebar polls={allPolls} selectPoll= {selectPoll} handleSearch={handleSearch} submit={addNewPoll} searchTerm={searchTerm}\n\t\t  />\n        </Col>\n        <Col md={8}>\n\t\t\t<MainContent poll={selectedPoll}  getOpinion={getOpinion} deletePoll= {deletePoll} submit={updatePoll} />\n\t\t</Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}